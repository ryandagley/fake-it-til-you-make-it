import psycopg2
import random
from datetime import datetime

# Set up your Redshift connection
conn_params = {
    'dbname': 'your_dbname',
    'user': 'your_username',
    'password': 'your_password',
    'host': 'your_redshift_host',
    'port': 'your_port'
}

connection = psycopg2.connect(**conn_params)
cursor = connection.cursor()

# Read the SQL script from a file
with open('your_sql_script.sql', 'r') as sql_file:
    sql_script = sql_file.read()

# Prompt the user to select temp tables to limit
table_names = ['table1', 'table2', 'table3']  # Add your table names here
print("Select tables to limit:")
for idx, table in enumerate(table_names, start=1):
    print(f"{idx}. {table}")

selected_tables = input("Enter the numbers of the tables to limit (comma-separated): ")
selected_table_indices = [int(idx) - 1 for idx in selected_tables.split(',')]

# Create a new table in the testing schema
now = datetime.now().strftime('%Y%m%d_%H%M%S')
new_table_name = f"testing.myname-{now}-limited_results"
create_table_query = f"""
    CREATE TABLE {new_table_name} AS (
        {sql_script}
    )
"""

cursor.execute(create_table_query)
connection.commit()

# Modify the SQL script to limit selected temp tables randomly and insert into the new table
for idx in selected_table_indices:
    selected_table_name = table_names[idx]
    random_row_count = random.randint(1, 1000000)  # Limit to a random number of rows
    modified_sql_script = sql_script.replace(
        selected_table_name, f"{selected_table_name} WHERE rownum <= {random_row_count}"
    )
    
    insert_into_new_table_query = f"""
        INSERT INTO {new_table_name} (
            {modified_sql_script}
        )
    """
    
    cursor.execute(insert_into_new_table_query)
    connection.commit()

# Close the connection
cursor.close()
connection.close()
